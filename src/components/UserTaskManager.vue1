<template>
  <div class="container mt-5">
    <!-- Page Title with Username -->
    <h2 class="text-center">Your Tasks, {{ username }}</h2>
    
    <!-- Task Form -->
    <div class="row justify-content-center mb-4">
      <div class="col-md-6">
        <form @submit.prevent="addTask">
          <div class="mb-3">
            <input
              v-model="newTask"
              type="text"
              class="form-control"
              placeholder="Enter a new task"
              required
            />
          </div>
          <button type="submit" class="btn btn-primary w-100">Add Task</button>
        </form>
      </div>
    </div>
    
    <!-- Task List -->
    <div class="row justify-content-center">
      <div class="col-md-6">
        <ul class="list-group">
          <li
            v-for="(task, index) in tasks"
            :key="index"
            class="list-group-item d-flex justify-content-between align-items-center"
          >
            <span>
              <input
                v-model="task.text"
                type="text"
                class="form-control-plaintext"
                readonly
                :class="{ 'text-decoration-line-through': task.completed }"
              />
            </span>
            
            <div>
              <button
                class="btn btn-sm btn-warning me-2"
                @click="editTask(index)"
              >
                Edit
              </button>
              <button
                class="btn btn-sm btn-danger"
                @click="deleteTask(index)"
              >
                Delete
              </button>
            </div>
          </li>
        </ul>
        
        <!-- Clear All Tasks Button -->
        <div class="mt-3">
          <button
            class="btn btn-danger w-100"
            @click="clearAllTasks"
            v-if="tasks.length > 0"
          >
            Clear All Tasks
          </button>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
export default {
  data() {
    return {
      newTask: '', // Input for new task
      tasks: [],   // List of tasks
      username: '', // Store logged-in username
    };
  },
  created() {
    // Retrieve tasks from localStorage when the component is created
    const storedTasks = localStorage.getItem('tasks');
    this.tasks = storedTasks ? JSON.parse(storedTasks) : [];
    
    // Retrieve the username from localStorage
    this.username = localStorage.getItem('username') || 'User';
  },
  methods: {
    addTask() {
      if (this.newTask.trim()) {
        this.tasks.push({ text: this.newTask, completed: false });
        this.newTask = '';
        this.saveTasks();
      }
    },
    editTask(index) {
      const updatedTask = prompt("Edit your task:", this.tasks[index].text);
      if (updatedTask !== null) {
        this.tasks[index].text = updatedTask;
        this.saveTasks();
      }
    },
    deleteTask(index) {
      this.tasks.splice(index, 1);
      this.saveTasks();
    },
    clearAllTasks() {
      if (confirm("Are you sure you want to clear all tasks?")) {
        this.tasks = [];
        this.saveTasks();
      }
    },
    saveTasks() {
      localStorage.setItem('tasks', JSON.stringify(this.tasks));
    }
  }
};
</script>

<style scoped>
.text-decoration-line-through {
  text-decoration: line-through;
}
</style>
